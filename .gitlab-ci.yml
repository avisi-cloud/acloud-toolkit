stages:
  - lint
  - test
  - build
  - scan
  - publish

include:
  - 'https://gitlab.avisi.cloud/ame/ci/raw/master/.templates/docker.yaml'
  - 'https://gitlab.avisi.cloud/ame/ci/raw/master/.templates/golang.yaml'

cache:
  paths:
    - /go/pkg/mod

variables:
  VERSION: $CI_COMMIT_TAG
  IMAGE_NAME: 'library/csi-snapshot-utils'

go:test:
  extends: .go:test
  stage: test

go:lint:
  extends: .go:make:golint
  stage: lint
  allow_failure: true

go:race_detector:
  extends: .go:make:race_detector
  stage: test
  allow_failure: true

docker:build-pr:
  extends: .docker:build-and-push
  stage: build
  tags: [docker]
  except: [tags]

docker:build:
  extends: .docker:build-and-push-version
  stage: build
  only: [tags]
  tags: [docker]

docker:lint:
  stage: lint
  extends: .docker:lint
  allow_failure: true

docker:promote:
  extends: .docker:promote-to-registry
  stage: publish
  only: [tags]
  tags: [docker]

trivy:scan:image:
  stage: scan
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [""]
  allow_failure: true
  variables:
    # No need to clone the repo, we exclusively work on artifacts.  See
    # https://docs.gitlab.com/ee/ci/runners/README.html#git-strategy
    GIT_STRATEGY: none
    TRIVY_USERNAME: "$gitlab-ci-token"
    TRIVY_PASSWORD: "$CI_JOB_TOKEN"
    TRIVY_AUTH_URL: "$CI_REGISTRY"
    FULL_IMAGE_NAME: $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
  script:
    - trivy --version
    - trivy image --severity LOW,MEDIUM --exit-code 0 --ignore-unfixed --format template --template "@/contrib/junit.tpl" -o junit-report-trivy-low-med.xml $FULL_IMAGE_NAME
    - trivy image --severity HIGH,CRITICAL --exit-code 1 --ignore-unfixed --format template --template "@/contrib/junit.tpl" -o junit-report-trivy-high-crit.xml $FULL_IMAGE_NAME
  artifacts:
    reports:
      junit:
        - ./junit-report-trivy-low-med.xml
        - ./junit-report-trivy-high-crit.xml
